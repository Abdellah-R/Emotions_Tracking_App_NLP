version: "3.9"

services:
  db:
    image: postgres
    volumes:
      - ./data/postgres_data:/var/lib/postgresql/data
    env:
      - POSTGRES_DB=${{ secrets.POSTGRES_DB }}
      - POSTGRES_USER=${{ secrets.POSTGRES_USER }}
      - POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
      - POSTGRES_NAME=${{ secrets.POSTGRES_NAME }}
      - DB_HOST=${{ secrets.DB_HOST }}
    networks:
      - mynetwork

  web:
    build: ./emotiontracking
    command:
      - bash
      - -c
      - |
        python manage.py makemigrations
        python manage.py migrate
        python ./src/postgre_patient_import.py
        python ./src/elastic_mapping_import.py 
        gunicorn emotiontracking.wsgi:application --bind 0.0.0.0:8000 
  #python manage.py runserver 0.0.0.0:8000
        
    volumes:
      - ./emotiontracking:/app
    ports:
      - "8000:8000"
    env:
      - SECRET_KEY=${{ secrets.SECRET_KEY }}
      - DEBUG=${{ secrets.DEBUG }}
    depends_on:
      - db
      - elasticsearch
    networks:
      - mynetwork

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - mynetwork

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    env:
      - ELASTICSEARCH_HOST=${{ secrets.ELASTICSEARCH_HOST }}
      - ELASTICSEARCH_PORT=${{ secrets.ELASTICSEARCH_PORT }}
    environment:
      - discovery.type=single-node
    volumes:
      - ./data/elasticsearch_data:/usr/share/elasticsearch/data/nodes
    ports:
      - "9200:9200"
    networks:
      - mynetwork

  nginx:
    build: ./nginx
    container_name: test_deploy_nginx
    ports:
      - 8008:80
    depends_on:
      - web
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

