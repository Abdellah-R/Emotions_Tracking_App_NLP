version: "3.9"

services:
  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=emotion_db
      - POSTGRES_USER=main_user
      - POSTGRES_PASSWORD=pwd
      - POSTGRES_NAME=emotion_db
      - DB_HOST=db

    networks:
      - mynetwork

  web:
    build: ./emotiontracking
    command:
      - bash
      - -c
      - |
        python manage.py makemigrations
        python manage.py migrate
        python ./src/postgre_patient_import.py
        python ./src/elastic_mapping_import.py  
        gunicorn emotiontracking.wsgi:application --bind 0.0.0.0:8000 
  #python manage.py runserver 0.0.0.0:8000
        
    volumes:
      - ./emotiontracking:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=emotion_db
      - POSTGRES_USER=main_user
      - POSTGRES_PASSWORD=pwd
      - POSTGRES_NAME=emotion_db
      - DB_HOST=db
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - HF_TOKEN=${HF_TOKEN}
    depends_on:
      - db
      - elasticsearch
    networks:
      - mynetwork

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - mynetwork

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    environment:
      - discovery.type=single-node
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST}
      - ELASTICSEARCH_PORT=${ELASTICSEARCH_PORT}
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data/nodes
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - mynetwork
    

  nginx:
    build: ./nginx
    container_name: test_deploy_nginx
    ports:
      - 8008:80
    depends_on:
      - web
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  elasticsearch_data:
  postgres_data:

